
## 1. Creating a docker machine

docker-machine create --driver=[NAME OF DRIVER] [HOST_MACHINE_NAME]

## In case of virtualbox as driver and Hyper-V is enabled then it won't be able to create
## so add option --virtualbox-no-vtx-check as follows
## docker-machine create --driver=virtualbox --virtualbox-no-vtx-check gauravhost


## 2. Checking environment variables

env | grep DOCKER

## If it returns nothing then you can set it as follows

docker-machine env [HOST_MACHINE_NAME] ## Name of the host created previously

## The above command will print all the env variables

eval $(docker-machine env [HOST_MACHINE_NAME])

env | grep DOCKER

## Get version of docker
docker --version

## More information on docker-machine
docker info

## Client and machine version
docker version

## to hide legacy commands from help docker --help
DOCKER_HIDE_LEGACY_COMMANDS=true

## list all the available images
docker image ls

## list all the containers
docker container ls

## run wildfly container in foreground interactive mode
docker container run -it jboss/wildfly

## run container in background mode
docker container run -d jboss/wildfly

## docker stop container
docker container stop [container_name or container_id]

## docker run container with specific name
docker container run -d --name web-app jboss/wildfly

## docker kill and delete container
docker container rm -f [container_name or container_id]

## Overriding the default command and run bash on new container
docker container run -it jboss/wildfly bash

## Mapping random port of docker machine to container
docker container run -d --name web -P jboss/wildfly

## Mapping specific port of the docker machine to container what -p 8080:8080 means is map 8080 port of docker machine to 8080 port of container
docker container run -d --name web -p 8080:8080 jboss/wildfly

## Mounting volume on container
docker container run -d --name web -p 8080:8080 -v `pwd`/webapp.war:/opt/jboss/wildfly/standalone/deployments/webapp.war jboss/wildfly


## Running registry locally
docker run -d -p 5000:5000 --restart always --name registry registry:2.6.2

## Docker compose

##Running docker from compose
docker-compose up -d

## List all the running services
docker-compose ps

## getting logs of services
docker-compose logs -f

## stopping and removing container and network
docker-compose down

## docker-compose option to provide context or namespace (-p)
docker-compose -p mynamespace up -d

## docker-compose view containers
docker-compose -p mynamespace ps

## removing services
docker-compose -p namespace down

## initializing swarm mode of docker
docker swarm init --advertise-addr 192.168.99.100

## leaving swarm cluster
docker swarm leave

## leaving swarm if you are only node
docker swarm leave -f

## listening to ip to hear request from other machines/worker
docker swarm init --listen-addr [IP]

## joining worker machines
docker swarm join --token [worker_token] <MANAGER>

